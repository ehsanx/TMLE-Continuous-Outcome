[["index.html", "Implementing TMLE in the Presence of a Continuous Outcome Section 1 Citation", " Implementing TMLE in the Presence of a Continuous Outcome Hanna Frank &amp; Ehsan Karim 2022-10-29 Section 1 Citation Supplementary materials - placed here for ease of running code in order. How to cite Frank, H and Karim, ME (2022) “Implementing TMLE in the Presence of a Continuous Outcome”, URL: ehsanx.github.io/TMLE-Continuous-Outcome "],["a-real-data-box-14-initial-data-setup.html", "Section 2 A Real data: Box 14: Initial data setup", " Section 2 A Real data: Box 14: Initial data setup # add column for outcome Y: length of stay # Y = date of discharge - study admission date # Y = date of death - study admission date if date of discharge not available ObsData &lt;- read.csv(&quot;https://hbiostat.org/data/repo/rhc.csv&quot;, header = TRUE) # ObsData &lt;- read.csv(&quot;rhc.csv&quot;, header = TRUE) # replace with your file path ObsData$Y &lt;- ObsData$dschdte - ObsData$sadmdte ObsData$Y[is.na(ObsData$Y)] &lt;- ObsData$dthdte[is.na(ObsData$Y)] - ObsData$sadmdte[is.na(ObsData$Y)] # remove outcomes we are not examining in this example ObsData &lt;- dplyr::select(ObsData, !c(dthdte,lstctdte,dschdte,death,t3d30,dth30,surv2md1)) # remove unnecessary and problematic variables ObsData &lt;- dplyr::select(ObsData, !c(sadmdte,ptid,X,adld3p,urin1,cat2)) # convert all categorical variables to factors factors &lt;- c(&quot;cat1&quot;, &quot;ca&quot;, &quot;cardiohx&quot;, &quot;chfhx&quot;, &quot;dementhx&quot;, &quot;psychhx&quot;, &quot;chrpulhx&quot;, &quot;renalhx&quot;, &quot;liverhx&quot;, &quot;gibledhx&quot;, &quot;malighx&quot;, &quot;immunhx&quot;, &quot;transhx&quot;, &quot;amihx&quot;, &quot;sex&quot;, &quot;dnr1&quot;, &quot;ninsclas&quot;, &quot;resp&quot;, &quot;card&quot;, &quot;neuro&quot;, &quot;gastr&quot;, &quot;renal&quot;, &quot;meta&quot;, &quot;hema&quot;, &quot;seps&quot;, &quot;trauma&quot;, &quot;ortho&quot;, &quot;race&quot;, &quot;income&quot;) ObsData[factors] &lt;- lapply(ObsData[factors], as.factor) # convert our treatment A (RHC vs. No RHC) to a binary variable ObsData$A &lt;- ifelse(ObsData$swang1 == &quot;RHC&quot;, 1, 0) ObsData &lt;- dplyr::select(ObsData, !swang1) # categorize the variables to match with the original paper ObsData$age &lt;- cut(ObsData$age,breaks=c(-Inf, 50, 60, 70, 80, Inf),right=FALSE) ObsData$race &lt;- factor(ObsData$race, levels=c(&quot;white&quot;,&quot;black&quot;,&quot;other&quot;)) ObsData$sex &lt;- as.factor(ObsData$sex) ObsData$sex &lt;- relevel(ObsData$sex, ref = &quot;Male&quot;) ObsData$cat1 &lt;- as.factor(ObsData$cat1) levels(ObsData$cat1) &lt;- c(&quot;ARF&quot;,&quot;CHF&quot;,&quot;Other&quot;,&quot;Other&quot;,&quot;Other&quot;, &quot;Other&quot;,&quot;Other&quot;,&quot;MOSF&quot;,&quot;MOSF&quot;) ObsData$ca &lt;- as.factor(ObsData$ca) levels(ObsData$ca) &lt;- c(&quot;Metastatic&quot;,&quot;None&quot;,&quot;Localized (Yes)&quot;) ObsData$ca &lt;- factor(ObsData$ca, levels=c(&quot;None&quot;, &quot;Localized (Yes)&quot;, &quot;Metastatic&quot;)) # rename variables names(ObsData) &lt;- c(&quot;Disease.category&quot;, &quot;Cancer&quot;, &quot;Cardiovascular&quot;, &quot;Congestive.HF&quot;, &quot;Dementia&quot;, &quot;Psychiatric&quot;, &quot;Pulmonary&quot;, &quot;Renal&quot;, &quot;Hepatic&quot;, &quot;GI.Bleed&quot;, &quot;Tumor&quot;, &quot;Immunosuppression&quot;, &quot;Transfer.hx&quot;, &quot;MI&quot;, &quot;age&quot;, &quot;sex&quot;, &quot;edu&quot;, &quot;DASIndex&quot;, &quot;APACHE.score&quot;, &quot;Glasgow.Coma.Score&quot;, &quot;blood.pressure&quot;, &quot;WBC&quot;, &quot;Heart.rate&quot;, &quot;Respiratory.rate&quot;, &quot;Temperature&quot;, &quot;PaO2vs.FIO2&quot;, &quot;Albumin&quot;, &quot;Hematocrit&quot;, &quot;Bilirubin&quot;, &quot;Creatinine&quot;, &quot;Sodium&quot;, &quot;Potassium&quot;, &quot;PaCo2&quot;, &quot;PH&quot;, &quot;Weight&quot;, &quot;DNR.status&quot;, &quot;Medical.insurance&quot;, &quot;Respiratory.Diag&quot;, &quot;Cardiovascular.Diag&quot;, &quot;Neurological.Diag&quot;, &quot;Gastrointestinal.Diag&quot;, &quot;Renal.Diag&quot;, &quot;Metabolic.Diag&quot;, &quot;Hematologic.Diag&quot;, &quot;Sepsis.Diag&quot;, &quot;Trauma.Diag&quot;, &quot;Orthopedic.Diag&quot;, &quot;race&quot;, &quot;income&quot;, &quot;Y&quot;, &quot;A&quot;) require(tableone) CreateTableOne(data = ObsData, strata = &quot;A&quot;) FALSE Stratified by A FALSE 0 1 p test FALSE n 3551 2184 FALSE Disease.category (%) &lt;0.001 FALSE ARF 1581 (44.5) 909 (41.6) FALSE CHF 247 ( 7.0) 209 ( 9.6) FALSE Other 955 (26.9) 208 ( 9.5) FALSE MOSF 768 (21.6) 858 (39.3) FALSE Cancer (%) 0.001 FALSE None 2652 (74.7) 1727 (79.1) FALSE Localized (Yes) 638 (18.0) 334 (15.3) FALSE Metastatic 261 ( 7.4) 123 ( 5.6) FALSE Cardiovascular = 1 (%) 567 (16.0) 446 (20.4) &lt;0.001 FALSE Congestive.HF = 1 (%) 596 (16.8) 425 (19.5) 0.011 FALSE Dementia = 1 (%) 413 (11.6) 151 ( 6.9) &lt;0.001 FALSE Psychiatric = 1 (%) 286 ( 8.1) 100 ( 4.6) &lt;0.001 FALSE Pulmonary = 1 (%) 774 (21.8) 315 (14.4) &lt;0.001 FALSE Renal = 1 (%) 149 ( 4.2) 106 ( 4.9) 0.268 FALSE Hepatic = 1 (%) 265 ( 7.5) 136 ( 6.2) 0.084 FALSE GI.Bleed = 1 (%) 131 ( 3.7) 54 ( 2.5) 0.014 FALSE Tumor = 1 (%) 872 (24.6) 444 (20.3) &lt;0.001 FALSE Immunosuppression = 1 (%) 907 (25.5) 636 (29.1) 0.003 FALSE Transfer.hx = 1 (%) 335 ( 9.4) 327 (15.0) &lt;0.001 FALSE MI = 1 (%) 105 ( 3.0) 95 ( 4.3) 0.007 FALSE age (%) &lt;0.001 FALSE [-Inf,50) 884 (24.9) 540 (24.7) FALSE [50,60) 546 (15.4) 371 (17.0) FALSE [60,70) 812 (22.9) 577 (26.4) FALSE [70,80) 809 (22.8) 529 (24.2) FALSE [80, Inf) 500 (14.1) 167 ( 7.6) FALSE sex = Female (%) 1637 (46.1) 906 (41.5) 0.001 FALSE edu (mean (SD)) 11.57 (3.13) 11.86 (3.16) 0.001 FALSE DASIndex (mean (SD)) 20.37 (5.48) 20.70 (5.03) 0.023 FALSE APACHE.score (mean (SD)) 50.93 (18.81) 60.74 (20.27) &lt;0.001 FALSE Glasgow.Coma.Score (mean (SD)) 22.25 (31.37) 18.97 (28.26) &lt;0.001 FALSE blood.pressure (mean (SD)) 84.87 (38.87) 68.20 (34.24) &lt;0.001 FALSE WBC (mean (SD)) 15.26 (11.41) 16.27 (12.55) 0.002 FALSE Heart.rate (mean (SD)) 112.87 (40.94) 118.93 (41.47) &lt;0.001 FALSE Respiratory.rate (mean (SD)) 28.98 (13.95) 26.65 (14.17) &lt;0.001 FALSE Temperature (mean (SD)) 37.63 (1.74) 37.59 (1.83) 0.429 FALSE PaO2vs.FIO2 (mean (SD)) 240.63 (116.66) 192.43 (105.54) &lt;0.001 FALSE Albumin (mean (SD)) 3.16 (0.67) 2.98 (0.93) &lt;0.001 FALSE Hematocrit (mean (SD)) 32.70 (8.79) 30.51 (7.42) &lt;0.001 FALSE Bilirubin (mean (SD)) 2.00 (4.43) 2.71 (5.33) &lt;0.001 FALSE Creatinine (mean (SD)) 1.92 (2.03) 2.47 (2.05) &lt;0.001 FALSE Sodium (mean (SD)) 137.04 (7.68) 136.33 (7.60) 0.001 FALSE Potassium (mean (SD)) 4.08 (1.04) 4.05 (1.01) 0.321 FALSE PaCo2 (mean (SD)) 39.95 (14.24) 36.79 (10.97) &lt;0.001 FALSE PH (mean (SD)) 7.39 (0.11) 7.38 (0.11) &lt;0.001 FALSE Weight (mean (SD)) 65.04 (29.50) 72.36 (27.73) &lt;0.001 FALSE DNR.status = Yes (%) 499 (14.1) 155 ( 7.1) &lt;0.001 FALSE Medical.insurance (%) &lt;0.001 FALSE Medicaid 454 (12.8) 193 ( 8.8) FALSE Medicare 947 (26.7) 511 (23.4) FALSE Medicare &amp; Medicaid 251 ( 7.1) 123 ( 5.6) FALSE No insurance 186 ( 5.2) 136 ( 6.2) FALSE Private 967 (27.2) 731 (33.5) FALSE Private &amp; Medicare 746 (21.0) 490 (22.4) FALSE Respiratory.Diag = Yes (%) 1481 (41.7) 632 (28.9) &lt;0.001 FALSE Cardiovascular.Diag = Yes (%) 1007 (28.4) 924 (42.3) &lt;0.001 FALSE Neurological.Diag = Yes (%) 575 (16.2) 118 ( 5.4) &lt;0.001 FALSE Gastrointestinal.Diag = Yes (%) 522 (14.7) 420 (19.2) &lt;0.001 FALSE Renal.Diag = Yes (%) 147 ( 4.1) 148 ( 6.8) &lt;0.001 FALSE Metabolic.Diag = Yes (%) 172 ( 4.8) 93 ( 4.3) 0.337 FALSE Hematologic.Diag = Yes (%) 239 ( 6.7) 115 ( 5.3) 0.029 FALSE Sepsis.Diag = Yes (%) 515 (14.5) 516 (23.6) &lt;0.001 FALSE Trauma.Diag = Yes (%) 18 ( 0.5) 34 ( 1.6) &lt;0.001 FALSE Orthopedic.Diag = Yes (%) 3 ( 0.1) 4 ( 0.2) 0.516 FALSE race (%) 0.425 FALSE white 2753 (77.5) 1707 (78.2) FALSE black 585 (16.5) 335 (15.3) FALSE other 213 ( 6.0) 142 ( 6.5) FALSE income (%) &lt;0.001 FALSE $11-$25k 713 (20.1) 452 (20.7) FALSE $25-$50k 500 (14.1) 393 (18.0) FALSE &gt; $50k 257 ( 7.2) 194 ( 8.9) FALSE Under $11k 2081 (58.6) 1145 (52.4) FALSE Y (mean (SD)) 19.53 (23.59) 24.86 (28.90) &lt;0.001 FALSE A (mean (SD)) 0.00 (0.00) 1.00 (0.00) &lt;0.001 "],["box-1-transformation-of-the-continuous-outcome-variable.html", "Section 3 Box 1: Transformation of the continuous outcome variable", " Section 3 Box 1: Transformation of the continuous outcome variable min.Y &lt;- min(ObsData$Y) max.Y &lt;- max(ObsData$Y) ObsData$Y.bounded &lt;- (ObsData$Y-min.Y)/(max.Y-min.Y) saveRDS(ObsData, file = &quot;rhcAnalytic.RDS&quot;) # for comparisons later # check the range of our transformed outcome data is what we expect summary(ObsData$Y.bounded) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.00000 0.01276 0.03061 0.04990 0.05867 1.00000 boxplot(ObsData$Y.bounded) "],["box-2-fit-superlearner-make-predictions.html", "Section 4 Box 2: Fit SuperLearner &amp; make predictions", " Section 4 Box 2: Fit SuperLearner &amp; make predictions library(SuperLearner) library(tmle) set.seed(123) ObsData.noY &lt;- dplyr::select(ObsData, !c(Y,Y.bounded)) Y.fit.sl &lt;- SuperLearner(Y=ObsData$Y.bounded, X=ObsData.noY, cvControl = list(V = 3), SL.library=c(&quot;SL.glm&quot;, &quot;tmle.SL.dbarts2&quot;, &quot;SL.glmnet&quot;), method=&quot;method.CC_nloglik&quot;, family=&quot;gaussian&quot;) ObsData$Pred.initialQ0 &lt;- Y.fit.sl$SL.predict # check the range of our newly predicted outcomes summary(ObsData$Pred.initialQ0) ## V1 ## Min. :0.00100 ## 1st Qu.:0.03837 ## Median :0.05035 ## Mean :0.04960 ## 3rd Qu.:0.06155 ## Max. :0.13982 hist(ObsData$Pred.initialQ0) require(cobalt) bal.plot(ObsData, var.name = &quot;Pred.initialQ0&quot;, treat = &quot;A&quot;, which = &quot;both&quot;, data = ObsData) "],["box-3a-3b-get-predictions-under-both-treatments-a-0-and-a-1.html", "Section 5 Box 3a &amp; 3b: Get predictions under both treatments, \\(A = 0\\) and \\(A = 1\\)", " Section 5 Box 3a &amp; 3b: Get predictions under both treatments, \\(A = 0\\) and \\(A = 1\\) \\(Q^0(A=1,L)\\) predictions: ObsData.noYA1 &lt;- ObsData.noY ObsData.noYA1$A &lt;- 1 ObsData$Pred.initialQ0.Y1 &lt;- SuperLearner(Y=ObsData$Y.bounded, X=ObsData.noY, cvControl = list(V = 3), SL.library=c(&quot;SL.glm&quot;, &quot;tmle.SL.dbarts2&quot;, &quot;SL.glmnet&quot;), method=&quot;method.CC_nloglik&quot;, family=&quot;gaussian&quot;, newX = ObsData.noYA1)$SL.predict summary(ObsData$Pred.initialQ0.Y1) ## V1 ## Min. :0.00100 ## 1st Qu.:0.04331 ## Median :0.05550 ## Mean :0.05414 ## 3rd Qu.:0.06580 ## Max. :0.11085 \\(Q^0(A=0,L)\\) predictions: ObsData.noYA0 &lt;- ObsData.noY ObsData.noYA0$A &lt;- 0 ObsData$Pred.initialQ0.Y0 &lt;- SuperLearner(Y=ObsData$Y.bounded, X=ObsData.noY, cvControl = list(V = 3), SL.library=c(&quot;SL.glm&quot;, &quot;tmle.SL.dbarts2&quot;, &quot;SL.glmnet&quot;), method=&quot;method.CC_nloglik&quot;, family=&quot;gaussian&quot;, newX = ObsData.noYA0)$SL.predict summary(ObsData$Pred.initialQ0.Y0) ## V1 ## Min. :0.00100 ## 1st Qu.:0.03665 ## Median :0.04840 ## Mean :0.04709 ## 3rd Qu.:0.05815 ## Max. :0.10932 "],["box-4-get-initial-treatment-effect-estimate.html", "Section 6 Box 4: Get initial treatment effect estimate", " Section 6 Box 4: Get initial treatment effect estimate ObsData$Pred.TE &lt;- ObsData$Pred.initialQ0.Y1 - ObsData$Pred.initialQ0.Y0 mean(ObsData$Pred.TE) ## [1] 0.007043316 hist(ObsData$Pred.TE) "],["box-5-fit-propensity-score-superlearner-make-predictions.html", "Section 7 Box 5: Fit propensity score SuperLearner &amp; make predictions", " Section 7 Box 5: Fit propensity score SuperLearner &amp; make predictions library(SuperLearner) library(tmle) set.seed(124) ObsData.noYA &lt;- dplyr::select(ObsData, !c(Y,Y.bounded, A,Pred.initialQ0, Pred.initialQ0.Y1, Pred.initialQ0.Y0, Pred.TE)) PS.fit.SL &lt;- SuperLearner(Y=ObsData$A, X=ObsData.noYA, cvControl = list(V = 3), SL.library=c(&quot;SL.glm&quot;, &quot;SL.gam&quot;, &quot;tmle.SL.dbarts.k.5&quot;), method=&quot;method.CC_nloglik&quot;, family=&quot;binomial&quot;) FALSE Error in s(age, 2) : FALSE unordered factors cannot be used as smoothing variables FALSE Error in s(age, 2) : FALSE unordered factors cannot be used as smoothing variables FALSE Error in s(age, 2) : FALSE unordered factors cannot be used as smoothing variables FALSE Error in s(age, 2) : FALSE unordered factors cannot be used as smoothing variables ObsData$PS.SL &lt;- PS.fit.SL$SL.predict summary(ObsData$PS.SL) FALSE V1 FALSE Min. :0.001492 FALSE 1st Qu.:0.157856 FALSE Median :0.349607 FALSE Mean :0.379279 FALSE 3rd Qu.:0.580233 FALSE Max. :0.988144 hist(ObsData$PS.SL) require(cobalt) bal.plot(ObsData, var.name = &quot;PS.SL&quot;, treat = &quot;A&quot;, which = &quot;both&quot;, data = ObsData) "],["box-6-estimate-clever-covariate-h.html", "Section 8 Box 6: Estimate clever covariate \\(H\\)", " Section 8 Box 6: Estimate clever covariate \\(H\\) # clever covariates ObsData$H.A1L &lt;- (ObsData$A) / ObsData$PS.SL summary(ObsData$H.A1L) ## V1 ## Min. : 0.0000 ## 1st Qu.: 0.0000 ## Median : 0.0000 ## Mean : 0.8986 ## 3rd Qu.: 1.4812 ## Max. :71.3503 boxplot(ObsData$H.A1L) ObsData$H.A0L &lt;- (1-ObsData$A) / (1- ObsData$PS.SL) summary(ObsData$H.A0L) ## V1 ## Min. : 0.000 ## 1st Qu.: 0.000 ## Median : 1.078 ## Mean : 0.957 ## 3rd Qu.: 1.392 ## Max. :14.777 boxplot(ObsData$H.A0L) ObsData$H.AL &lt;- ObsData$H.A1L - ObsData$H.A0L summary(ObsData$H.AL) ## V1 ## Min. :-14.77746 ## 1st Qu.: -1.39225 ## Median : -1.07847 ## Mean : -0.05846 ## 3rd Qu.: 1.48121 ## Max. : 71.35033 boxplot(ObsData$H.AL) "],["box-7-estimate-fluctuation-parameter-epsilon.html", "Section 9 Box 7: Estimate fluctuation parameter \\(\\epsilon\\)", " Section 9 Box 7: Estimate fluctuation parameter \\(\\epsilon\\) eps_mod &lt;- glm(Y.bounded ~ -1 + H.A1L + H.A0L + offset(qlogis(Pred.initialQ0)), family = &quot;binomial&quot;, data = ObsData) epsilon &lt;- coef(eps_mod) epsilon[&quot;H.A1L&quot;] ## H.A1L ## 0.005867462 epsilon[&quot;H.A0L&quot;] ## H.A0L ## 0.008207235 "],["box-8-update-the-initial-outcome-model-prediction-based-on-targeted-adjustment-of-the-initial-predictions-using-the-ps-model.html", "Section 10 Box 8: Update the initial outcome model prediction based on targeted adjustment of the initial predictions using the PS model", " Section 10 Box 8: Update the initial outcome model prediction based on targeted adjustment of the initial predictions using the PS model ObsData$Pred.updateQ1.Y1 &lt;- plogis(qlogis(ObsData$Pred.initialQ0.Y1) + epsilon[&quot;H.A1L&quot;]*ObsData$H.A1L) ObsData$Pred.updateQ1.Y0 &lt;- plogis(qlogis(ObsData$Pred.initialQ0.Y0) + epsilon[&quot;H.A0L&quot;]*ObsData$H.A0L) summary(ObsData$Pred.updateQ1.Y1) ## V1 ## Min. :0.00100 ## 1st Qu.:0.04354 ## Median :0.05579 ## Mean :0.05441 ## 3rd Qu.:0.06610 ## Max. :0.11170 boxplot(ObsData$Pred.updateQ1.Y1) summary(ObsData$Pred.updateQ1.Y0) ## V1 ## Min. :0.00100 ## 1st Qu.:0.03691 ## Median :0.04874 ## Mean :0.04744 ## 3rd Qu.:0.05853 ## Max. :0.10932 boxplot(ObsData$Pred.updateQ1.Y0) "],["box-9-find-treatment-effect-estimate.html", "Section 11 Box 9: Find treatment effect estimate", " Section 11 Box 9: Find treatment effect estimate ATE.TMLE.bounded.vector &lt;- ObsData$Pred.updateQ1.Y1 - ObsData$Pred.updateQ1.Y0 summary(ATE.TMLE.bounded.vector) ## V1 ## Min. :-0.002969 ## 1st Qu.: 0.005886 ## Median : 0.006871 ## Mean : 0.006969 ## 3rd Qu.: 0.008024 ## Max. : 0.032930 hist(ATE.TMLE.bounded.vector) ATE.TMLE.bounded &lt;- mean(ATE.TMLE.bounded.vector, na.rm = TRUE) ATE.TMLE.bounded ## [1] 0.006969253 "],["box-10-transform-back-the-treatment-effect-estimate-in-the-original-outcome-scale.html", "Section 12 Box 10: Transform back the treatment effect estimate in the original outcome scale", " Section 12 Box 10: Transform back the treatment effect estimate in the original outcome scale ATE.TMLE &lt;- (max.Y-min.Y)*ATE.TMLE.bounded ATE.TMLE ## [1] 2.731947 "],["box-11-confidence-interval-estimation.html", "Section 13 Box 11: Confidence interval estimation", " Section 13 Box 11: Confidence interval estimation # transform predicted outcomes back to original scale ObsData$Pred.updateQ1.Y1.rescaled &lt;- (max.Y- min.Y)*ObsData$Pred.updateQ1.Y1 + min.Y ObsData$Pred.updateQ1.Y0.rescaled &lt;- (max.Y- min.Y)*ObsData$Pred.updateQ1.Y0 + min.Y EY1_TMLE1 &lt;- mean(ObsData$Pred.updateQ1.Y1.rescaled, na.rm = TRUE) EY0_TMLE1 &lt;- mean(ObsData$Pred.updateQ1.Y0.rescaled, na.rm = TRUE) # ATE efficient influence curve D1 &lt;- ObsData$A/ObsData$PS.SL* (ObsData$Y - ObsData$Pred.updateQ1.Y1.rescaled) + ObsData$Pred.updateQ1.Y1.rescaled - EY1_TMLE1 D0 &lt;- (1 - ObsData$A)/(1 - ObsData$PS.SL)* (ObsData$Y - ObsData$Pred.updateQ1.Y0.rescaled) + ObsData$Pred.updateQ1.Y0.rescaled - EY0_TMLE1 EIC &lt;- D1 - D0 # ATE variance n &lt;- nrow(ObsData) varHat.IC &lt;- var(EIC, na.rm = TRUE)/n # ATE 95% CI ATE.TMLE.CI &lt;- c(ATE.TMLE - 1.96*sqrt(varHat.IC), ATE.TMLE + 1.96*sqrt(varHat.IC)) ATE.TMLE.CI ## [1] 0.9578281 4.5060665 "],["box-12-tmle-package.html", "Section 14 Box 12: tmle package", " Section 14 Box 12: tmle package ObsData &lt;- readRDS(&#39;rhcAnalytic.RDS&#39;) set.seed(123) # run tmle from the tmle package W &lt;- dplyr::select(ObsData, !c(Y, Y.bounded, A)) TMLE_PKG &lt;- tmle::tmle(Y = ObsData$Y.bounded, A = ObsData$A, W = W, family = &quot;gaussian&quot;) TMLE_PKG ## Additive Effect ## Parameter Estimate: 0.0069648 ## Estimated Variance: 4.404e-06 ## p-value: 0.00090398 ## 95% Conf Interval: (0.0028516, 0.011078) ## ## Additive Effect among the Treated ## Parameter Estimate: 0.0058244 ## Estimated Variance: 5.7676e-06 ## p-value: 0.015299 ## 95% Conf Interval: (0.0011173, 0.010531) ## ## Additive Effect among the Controls ## Parameter Estimate: 0.0082603 ## Estimated Variance: 5.8249e-06 ## p-value: 0.00062031 ## 95% Conf Interval: (0.0035299, 0.012991) TMLE_PKG_ATE_tr &lt;- TMLE_PKG$estimates$ATE$psi TMLE_PKG_ATE_tr ## [1] 0.006964776 # transform back the ATE estimate using bounds of original Y TMLE_PKG_ATE &lt;- (max.Y-min.Y)*TMLE_PKG_ATE_tr TMLE_PKG_ATE ## [1] 2.730192 TMLE_PKG_CI &lt;- (max.Y-min.Y)*TMLE_PKG$estimates$ATE$CI TMLE_PKG_CI ## [1] 1.117820 4.342564 "],["box-13-comparison-with-keele-2021.html", "Section 15 Box 13: Comparison with Keele (2021)", " Section 15 Box 13: Comparison with Keele (2021) library(SuperLearner) set.seed(123) ObsData &lt;- readRDS(&#39;rhcAnalytic.RDS&#39;) # specify the library of machine learning algorithms our SuperLearner should use Q.SL.library = c(&quot;SL.glm&quot;, &quot;SL.randomForest&quot;, &quot;SL.glmnet&quot;) # fit our SuperLearner X &lt;- dplyr::select(ObsData, !c(Y.bounded, Y)) QbarSL &lt;- SuperLearner(Y=ObsData$Y.bounded, X=X, SL.library=Q.SL.library, family=&quot;gaussian&quot;, method=&quot;method.CC_nloglik&quot;) ## Loading required namespace: randomForest # make predictions with our fitted model QbarAW &lt;- predict(QbarSL, newdata=ObsData)$pred ## Warning in predict.SL.glmnet(object = structure(list(object = structure(list(: ## Removing extra columns in prediction data: Y, Y.bounded # predict the counterfactual outcomes under treatment/no treatment for each observation X1 &lt;- X X1$A &lt;- 1 X0 &lt;- X X0$A &lt;- 0 Qbar1W&lt;- predict(QbarSL, newdata=X1)$pred # predicted outcome under treatment Qbar0W&lt;- predict(QbarSL, newdata=X0)$pred # predicted outcome under no treatment # initial estimate of the effect of A on Y: PsiHat.SS &lt;- mean(Qbar1W - Qbar0W) cat(&quot;/n Our initial estimate of the effect of RHC on length of stay is: &quot;, PsiHat.SS) ## /n Our initial estimate of the effect of RHC on length of stay is: 0.006103759 # specify the library of machine learning algorithms our SuperLearner should use for the propensity score model G.SL.library = c(&quot;SL.glm&quot;, &quot;SL.randomForest&quot;, &quot;SL.glmnet&quot;) # construct the propensity score model using SuperLearner gHatSL &lt;- SuperLearner(Y=ObsData$A, X=subset(ObsData, select= -c(A,Y.bounded,Y)), SL.library=G.SL.library, family=&quot;binomial&quot;) # get the probability of receiving each treatment for each observation gHat1W &lt;- gHatSL$SL.predict # predicted probabilities of A=1 given baseline chars gHat0W &lt;- 1 - gHat1W # get the probability of receiving the treatment they did receive for each observation gHatAW &lt;- rep(NA, nrow(ObsData)) gHatAW[ObsData$A==1] &lt;- gHat1W[ObsData$A==1] gHatAW[ObsData$A==0] &lt;- gHat0W[ObsData$A==0] # clever covariates H1W &lt;- ObsData$A / gHat1W H0W &lt;- (1-ObsData$A) / gHat0W # fluctuation parameter eps_mod &lt;- glm(ObsData$Y.bounded ~ -1 + H0W + H1W + offset(qlogis(QbarAW)), family = &quot;binomial&quot;) ## Warning in eval(family$initialize): non-integer #successes in a binomial glm! epsilon &lt;- coef(eps_mod) # updated estimates Q0W_1 &lt;- plogis(qlogis(Qbar0W) + epsilon[1]*H0W) Q1W_1 &lt;- plogis(qlogis(Qbar1W) + epsilon[2]*H1W) # transformed ATE ATE_TMLE1_tr &lt;- mean(Q1W_1 - Q0W_1) # ATE on original scale ATE_TMLE1 &lt;- (max.Y-min.Y)*ATE_TMLE1_tr cat(&quot;\\nUpdated ATE estimate: &quot;, ATE_TMLE1, &quot;\\n&quot;) ## ## Updated ATE estimate: 2.442183 # transform predicted outcomes back to original scale Q1W_1_sc &lt;- (max.Y-min.Y)*Q1W_1 Q0W_1_sc &lt;- (max.Y-min.Y)*Q0W_1 EY1_TMLE1 &lt;- mean(Q1W_1_sc) EY0_TMLE1 &lt;- mean(Q0W_1_sc) # ATE efficient influence curve D1 &lt;- ObsData$A/gHat1W*(ObsData$Y.bounded - Q1W_1_sc) + Q1W_1_sc - EY1_TMLE1 D0 &lt;- (1 - ObsData$A)/(1 - gHat1W)*(ObsData$Y.bounded - Q0W_1_sc) + Q0W_1_sc - EY0_TMLE1 EIC &lt;- D1 - D0 # ATE variance n &lt;- nrow(ObsData) varHat.IC &lt;- var(EIC)/n # ATE 95%CI ATE_TMLE1_CI &lt;- c(ATE_TMLE1 - 1.96*sqrt(varHat.IC), ATE_TMLE1 + 1.96*sqrt(varHat.IC)) cat(&quot;\\nATE: &quot;, ATE_TMLE1, &quot; (&quot;, ATE_TMLE1_CI[1], &quot;, &quot;, ATE_TMLE1_CI[2], &quot;)&quot;, sep = &quot;&quot;) ## ## ATE: 2.442183 (1.684947, 3.199419) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
